<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAqcAAAB0CAIAAAA3sgz7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAGEhJREFUeF7t3UGIV9UXB/Bk0l07A2kh4sYWQgoxxGwUlEgCl4mEi1xMq4jKBlpK
        ZLRSSwg3I1QLQUKDGBctohZ/FRvauBtCSEeE2rh2oP95v3fe7/d7v3fPuffce9/vvd/8vp9Vzrx77rn3
        nvvOjNXMC/8BAADAfEDXBwAAmBfo+gAAAPMCXR8AAGBe9LrrP378+OLAjz/+SP/MHwUAAIAofez6z58/
        f/vtt1999dUX6ugj9Cl+CAAAAIx61PXX19e5vYfhYQAAABCmL72TO7nRlStXeDwAAAD4dN/1b926deTI
        EW7jdjSWInAsAAAAkHXZ9Z8+fbpr1y7u3mkoFAcFAAAAQTdd/48//uB2nRtF5jkAAACgbtpdn74pX1lZ
        2blzJ3fp3Cgyvu8HAABwmmrX5848FTdv3uRZAQAAYGB6Xf/+/fvckKeFZuS5AQAAYDpdf9++fdyHg+3e
        vfvChQs8vkIf4U9b8GAAAIC512JTfPLkycLCAvfeYKurqzxeQA8QfjoYZUL5cAgAAIC51FbXv3z5csS3
        +OfPn+fxPvQkjwlG+fBgAACAudRK1+c2a3H79m0eHIyG8GCLe/fu8XgAAIA5k7nrb25unjt3jhtssAMH
        DvB4o6tXr9JYjhJmYWGBMqQ8OQQAAMDcyNP1T506xU3V4ujRozw+GYXioBaU9t27dzkEAADAdpeh6+/d
        u5e7qMXKygqPz4dicnQLyp/HAwAAbGtJXf/GjRtLS0vcPC1Onz7NIXKjyDyHBS2ExwMAAGxf8V1/x44d
        3DODXbx4kQe3jCbiKYPRch49esTjAQAAtiNb1//fAPfJYIuLi9evX+cQ00XzchIWtEYeDwAAsI3Yuj53
        RYs9e/ZsbW3x+C5QApyKBQ8GAADYRkLb27Vr17gfWpw8eZLHd40y4ZwsaNU8HgAAYPaFdn1ugxaHDx/m
        wf1A+XBmFjwYAABg9vm72sOHD7kBBuORvXTixAnOMgwtn0cCAADMOH+HNv04/YMHD3p/fU7nKEPKkzP2
        2b9/Pw8DAACYcf6uz93P5+zZsw8ePOAxs4AS5tQD8BgAAIBZlqfrr62t8dMzhdI+fvw4r0HFAwAAAGaZ
        p58dOnSI+57q2LFjEb80r1u///57+H/YT/vAwwAAAGaWp+tz0wt24cIFHtlvV65c4YyD8UgAAICZlbnr
        k9dff50H99Lt27ePHTvGuVrweAAAgJmVv+uThYWF58+fc4g+ocQ4RTsOAQAAMLO0ZhbxI/ebOFannj17
        xtkkwA/nBwCAWad15V9//ZU7XoIvv/ySw3Xk2rVrr7zyCmeTgHaDIwIAAMym1rt+6Z133vnrr7847rRs
        bm5++OGHnEEydP2WbaytrW1sbPCfWkDBiyn4TwAA82hKXZ+8+OKLHHdadu7cyXPnMM2uv8Rz+ixdSuph
        a8scR7U8/FkMa8tLBf54DmML2LiUM7BoMGPYwieNNmJSVDz74RVftVxaXh6cAgcZKj5Gn7pUfOXEjwfa
        uOQMaBefwkCWPIoIlESRA4fNpZ3Nj63FAVcFhV+jxJdHBhNLT0go7uXBF3pqW2Z937YmsuvTp7799lv+
        g9H777/f3n/rt7W1xdMY0XJouL7kcoqpoHcMvQR5akVKiahFuETvMPE7b0ou5pY5jPKfZtdntMn+PS43
        gkfogs5sadnel8NqYdwgax4ejLaDh2cRlQPJVl2xCdRMZ/ODSnFoSY+vvzwoOxqevC/JHBc+teGFnVWx
        e5PL7/f7Nrf4rl8+s76+zh8yWlxcLCNk9Oabb3J0Ix7fo67P/O+C6DJUu6w/qjZcHV2/X6NHxwJqLzV5
        XnnW8SkbX67rnc68veq2Nmf3cJ5/8YKYeG8V//LC9dYqvsTgR8Iou0HT0jT1cMUHBt8CK4uO+DLHVF2D
        HJRXdvQ3aFPf/IDrXgisyeZR2hNqkfOIzdfNQb/QejX0932bVWrXJzdv3uSPGv37778cItmzZ88++ugj
        jmtE+XOU/nX9gt5HYl9qWtSgkEqAgBquRo8eHX1EnVye1jdrObK5Nq3RxextpniuF1DRePnTguKvyfnh
        IdPLXs7em3yRsXQ4/szrYqpLHWOavavNL3j7TmgR1bcjqpRbJBxWjvan1EFIfG04idxILerUzyZD1yeb
        m5uffPLJjh07+NPBDhw4wCHScDgLSpjS5vGVPnZ9ohdizE1RvyAOCyiHCBpfrmn0aPlnf2sRt8I/6yDj
        5mOJC5mkHFZwPNerP/jd4EogaXApLIT2bbfl7RZ3KDn2vsPNZ+rlDA43FsWaQPvEg8qRamoNa2VEYt4K
        6pFGvWZS5On6pTt37vCnLd56662U/7yfOveZM2c4lgWPr+tp189eNfp7JexuyFcjMJ8iidFUg5T8I5Nm
        LeZoPiZuRuQbKDWec7ztjBNC5NgN5a0Z+q1v7DmrU/Mzmm43vyIeQikg2GgfIqu4VcopZUg3tnbGqAdg
        O8uCfp5TP6GcXX/ogw8+4Ocs3njjDR4fhodZUGI8WDCbXd9aNsqdGwgLl363aFGjqYoVmt5mk0JmpUma
        j4l7G3kbk+K5B2d6zywFxMm0GxtinLDFRJ+zUtzeiTvf/BF5+wZ8sYbD7clPgf4CSk45/c3k2X7ji0Ff
        rjlcula6fun777/npy2+/vprHi9YHeCnLSgfDiHra9f31Y3ppniDhUXLcrdGBU/3LGRc2qw0uvmYeMMj
        b2NCPPfQqDyEjfLuUr7dkI8qIFT8OcsjPUN7sPnjlHUUlFijkaYJp8azsuSs5fihkX0ZmlL0Bpv6MbXY
        9ckXX3zBAyyU4Pfu3eOHjCgTDqGa2a5vKJzq5bZ8Ke1ypN+tGC3Mmq/PlWLjSUuLXZiQhydczt1Qyta3
        qIRzFlegLaEfm1+nbF9BiDWcObJ8WyefTyV201lC7TDPzpPwFKvlpr5vM2q365NffvmFxxh9/vnnHKLy
        1Vdf8ecsKAEeH6CvXb+snOVLyoUJvePDIlyTr19QrPS7FaOFWdO2oSkynjAs4d0tJaLuVN7dkI/LEy7h
        nMUVKHP2ZPMnebqPI9Zw2ujr0LYqw+InHpX/1JSw7yT9HVHm2K/3bUatd/1xPNji3Llzn376Kf/B4r33
        3uNZLXra9bmMtcIhISVdXYhBnaVVYfrditHCrLkvY1Q8aV1JLwQpEy3o1HZDD5hwzvKM0tDebH6TvA8D
        9RWNHm7zCqaptoUyVNaWtPMJtVPiAPS0XEthwapUBusRgyWtNsJUu37cL7aPQBPxlEa97vqD2lBuSkAZ
        1opQiWUp6KbAuxWlhVlzX8aYeOKYpL2M2azsryY5CW1x8edsH9mfzXdR9q8wCjZcRuxJTUOVZJm2uPNJ
        a0je+TLAIAVt9/3RqtHlapLzymWqXb/0zz//fPbZZxwoN4rM00TpadcvL4evdPxXpbpk/FxaFXZTwy3M
        Kr56fNspiIiXO4WKGFferfypKBUrn1n8OYsLkAb2aPPdlA0slGkOZ0vMul1VltUOyHtk3aQxye+IMqty
        I7XN9211tTp+LjmvXDro+qV3332XY+VDMTl6rH52fa6WgJuil8/klZMjhbw5UmqYxkYWegs3J2kXHOzx
        5BONXlRJ3i0xcu7dIBFZRJ+zNE7Ovk+bL1FCFZZG/4o8MedJxQ9crsQe/xje67HDyLhJQ7G1U+Hx1cNy
        gXgCVgOHD7Vwt6J01vVLH3/8MUdMw+GSzUTXV98BShk2ijCtClPuFk3sf8gp9UY75L6L5njKeUYviom5
        iMnk3o2CnIW4wLhzFn5KgJZ6rzZfpqQ5knBEDa4fSkwzWH/AcA1vSC3NFvY/rnZGePzwYW3vlYjV8Y8e
        EQsi58EF6Ljrl65fv85xjRYXF2ksR8mhn12/LJaxytDKUCqgasz455OuR8LgYkEBM7gkpeyW+y6a44kD
        YjMYUSpF2K/cu1FQspCi2s95w/mr+orflqPm3avN1yjRSsn5Dik/Yomk/jXdRJ4RxeFhr526cvVjk2tb
        L+XoWm1qYrn0ouuTPXv2cOhgNGRra4vHZ9LLrs+1Uisv7Vo6K8hVhGlVGDuYXymRdd7CxRH3UrrQHtZ4
        8pJiMxixx869GwNKuQrHFnrOg1945/qtN4N278+4X5uvU+IVkvNlymFVYqaqsm8euDxh3JJCa0fAw2tz
        a3viDFrlUIuSmFg2fen6pZMnT/IEPvQkj8mqz11/4m0nFpCzhKqqnfiUWMwB181ewrXfSBpZ5y1cnIC3
        XB7CpirzR6+pYiwTklISIiUNIayWuGbQ7Q2/2rdfm+/j2ZWUI6oEbrx5qiqua+GZD0FeQlA0Hl5/VtsW
        R9RqRROfauVy2fWr65e+++47nqaBPsUPtaOXXZ9LZaKAtDJs1JBQhElVqCUQwHFVQiTeaBdxE3ITNlWZ
        P3pNQ+bgKSUhk9MQwiZW10DI9/v92nw/z74kHVJBSXmCbQVV3u5RyqoiNirxHcFbMPGstvGNXa92cXI+
        cXeTz82kj12/w9bb4dQiLrdmXWgXtFZuVcE2Q6TcD+0aBAi6gE0pGQvCX3SJhKutzB+9piFz8HZeTHIa
        Qtjwc94o/pK/+EsksRyp+4v/br9fmx/Cc++SjslyqU0TVXGlZSvz2ncqvHZceHRzecpp1gNX8zdDpGWW
        Dbp+TYdTi8QqDC1DuQiTqtA+dtb+ht/0XhuxxlOOMTKDMUpw94bl3o2SnIYQNuqctV/uL0zUr80PI+/N
        QEreSsYNhiVwxlpm5gqRpb0j5Fy1zRmLXE3viJCWWTbo+jUdTi3iWnPVvlxEY89XteqsK7GQ/VctuoLL
        OSPLvIV7k7AHTtZ4yilGZjBij517NwbsacSfs22ufm1+GPGIKvHRvaFHDJMoGxHCupz42inwFrgm1dYx
        fL7aQudcrdwuM3T9mg6nFnGhuAtWu6XlCLUIU6ow4W4Vs3ofcku70U4Je+BkjicOSH8XKO8pYb9y78aA
        PY2kc5Y3tDm6V5sfQAk6Jjb3sOgD4UtQjiOMcTVJtVNl635UW0o5onrCOD652CzQ9Ws6nFpSlbBQsJ4y
        rEZLRSUPF+YbSblbNK3/Iae0G+2U+yaa48lril8Uk8/XXBEp7yV7GonnLE84Ob5Xm+81DLl0aU1ZI4mc
        QtmOuvD4ep5hTEeRVDvVYOFRbTE0pBot7Y48PLXYLND1azqcWsJ1Il4y7ZoOf1JnxGhvFabdLcP/XFWT
        NKubeBMjX5z2ePKiIlOoKMUhbVfu3ShEpJF6zvLrdTJAnzbfY7gozkxZJIlMXw9aCV9BFS9gRPihqZJq
        h3MQN0851Xbftxmh69d0OLXEV4Uh11QenPDK66aAW5hV3D/vFrhFxGtrL+XSEOPm3o1CRBqpOyKPb0To
        0eZrRmmODZfnKEQXsLx3A5a4VYZBa1ZOzbBnSQfK+SpL1Pe8EHPRE66XGbp+TYdTC6oy0erVV4ZRY71V
        mHS3orUwa/wWuMXEE5eV9DKI2azcu0Hk+pTTSD5nedLGSvqz+bLRciZGK+sksSuQkzeG5PRCB2WZN2Xn
        q7Hak/qWR45NqjUjdP2aDqcWVFWi1qtyV4g6VK5g3w1JuVvxWpg190WMiyeNStlMKaaWSO7dUCJqa0s+
        Z3lWx0r6svmSYSzXYGWlheg1FL9/p3YI3t9p0MS5ha9ZeZUFB0mpnWoz1SeVJIk6VD6slFozQtev6XBq
        Qdi1ib8r8Tck5W7Fa2FW8SKGv6tqIuNJK4vfTSkRNWLu3YgMmHzO4rTOiXuy+U6j3KSxyloL8YtIVGVu
        Kh1lMYELSakdnt2TsTxD/MgpnhK6fk2HU7sF3xvprvgGylUYP9JUvxTG8nwLt0Z8zXg33S06njAwdmFC
        OE8WmXdDPC9PuORzFtchTN2LzXcYBdJSUVZbiL4bSaozNC5aWUvYOhJqJzhlKUnfQDk3e2lEQ9ev6XBq
        t6q4/OXuLif/OPGOxdev5R1TRLE+72aJUhO9A4KEeO7VxeXhTsMbK+tuiKflDZZ6zvJ4ce4ebH7DMI53
        qHhupejbEa/aT/OqlbMLWkZC7VS76J/HPYl/XNb7FQldv6bDqZ2GpRVQ7a4yDBgmvy08gxPu1kgxu6nc
        s8xal/seJsVzry8iE2cWKfVgz0E8q4BQiecsD9cm73zz60bpBA0VT64UfT8iVdlHbF/c6Q3Jw317MBwZ
        sFmuWQKGyac0vQNC16/pcGqnYYkEXZ3JggoaFH1F4u/WyCBj02shx6wTxHsY8b4qpMZzLtGYiyuHsBBi
        9tYNlgKFpZF2zvJo3/Tdbv6YsUSCN14+u4HoGxKjysW88EL8+RXia2e4gUFZT2530KD45PJB16/pcGqX
        sbIKKol6RYXdN+VNoc8ZPXCII5iqXZ41+tJkDilf6/AXoDNGcDaO0cpvnauTszekP/jPv3lUTXAayqH4
        00hcQ3ebPzQexLDt6qUsmGKlGC0g7loqR+iPKA/2rH9s94LSrk8UtrnKCcVtVQSt69+5c4fTafj555/5
        oRZ02HppXTxTA+0GPzQt9Zoyl2FYDWnXSw2hDgyYfDTeUuzKrLFvtNwhc13rDcfvj1vy/q9Tjn5rajpq
        2wjJX/y9d6Y0tOrST0UbGb7/3Wz+wGQQY9HIqy/FXhOLsSxip9Pq0BMztgLq44K2fXxI2DmpB2Q66gRa
        1yecTcNLL73ET7Sgq67/+PFjWhfP1MAPTU2zPIJqYnhbwipIfclr90ut3sLgf+51jC5/3a75fpX0dKMu
        Te6QWeM5WyjtbLG143s7+B3zE9taMP8f1p56qI51ImYxvfY77s2tz1ddzeISNmAkpv1OefOFGQ1903sr
        Bygx41aY1L9qiWz7nkJUDlPfAzGdnr9vs4rs+oSfaEFXXV9p+YQfmgrX5S8sNd92DVxX3iKkN5V7kgk0
        Z2PKwKFhwiq9fLHyEJkjWVFYyPB3d2i88AxZ2NJrAgqliY6Vh2dS1itHD0bLzVddhagsKlPYfN9XLCHx
        ihimPKMqxMd5dDFfbwUUouNUw/agcQPFI+7L+zY3dP0RnkPAD00FTynTaqz4olXvpDEv9yIilS3hD2Tj
        6/pxrUi9hblDRsWzf11PLw56Py07T6H42NIyvaTMr4ziL7MdAaOUScRkkTePwiCXfJ2tnc03VY6zAMO+
        vRfZq1Dg7WnUzfhRUfGC4acNKG7cJoQP1FJv733bGk8zO3ToEGfhcubMmT///JMfzWf6XZ8WwhMIaB/4
        UQAAgJnl/xaW+55qbc37ZZzB1Lo+pX38+HEOreIBY+grPP4nAACAGZGn65OzZ88+ePCAx6SZTtenhDlo
        AB4DAAAwy/z97LXXXuPWF+DgwYOrq6s8MlbbXZ8ypDw5og8tn4cBAADMOH/XX19f5wYYjEfGarXrnzhx
        gmOFoeXzSAAAgBkX2qG5B1ocPnyYBxu11PUpH45iwYMBAABmX2hX++2337gNWpw8eZLHW7TR9SkTDmFB
        q+bxAAAAs8/2vSw3Q4s9e/ZsbW3x+DB5uz4lwIMteDAAAMA2Ymtv/xvgxhhscXHx+vXrHCJAxq5P8/JI
        C1ojjwcAANhG4r+p3bFjBzfJYBcvXuTBqvSuTxPxgGC0nEePHvF4AACA7Sjpr7Jv3Ljh+PGUAU6fPs0h
        XFK6PkXmRy1oITweAABg+8rwL7D37t3LzdNiZWWFxzdEd32Kyc9ZUP48HgAAYFvL85+tnTp1iluoxdGj
        R3l8XUTXp1D8hAWlfffuXQ4BAACw3eXp+kObm5vnzp3jphrswIEDPH4gvOtfvXqVxvLnwiwsLFCGlCeH
        AAAAmBuZu36JG6zF7du3eXBw16ch/FGLe/fu8XgAAIA500rXJ5cvX963bx932mDnz5+nsSFdn57kDwWj
        fMqxAAAA86mtrk+ePHmysLDALTfY6uqq3vXpAcJ/DkaZUD6cGQAAwFxqsesPRXzTnxEnAQAAMPem1xTv
        37/PfXhaaEaeGwAAAKbZ9Ql346m4efMmzwoAAAAD0/4L8KdPn66srOzcuZObc24UmabgyQAAAGBMl//a
        e//+/dyrk1Gob775huMCAACAS5ddn74p37VrF/ftNPj+HgAAwKvLrl+6devWkSNHuHvb0ViKwLEAAABA
        1n3XL3EPN7py5QqPBwAAAJ++dH2yvr7OzTwMDwMAAIAwfeydP/300+7du7m31/3www/8EAAAABj19zvm
        v//+++WXX+Zu/8ILBw8efPjwIX8OAAAA7PD35AAAAPMCXR8AAGBeoOsDAADMC3R9AACAeYGuDwAAMC/Q
        9QEAAOYFuj4AAMC8QNcHAACYF+j6AAAA8wJdHwAAYF6g6wMAAMwLdH0AAID58N9//wdYEhRYM/E1GgAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>